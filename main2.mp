import nuepkgs.system.console.color
import nuepkgs.system.calc.physics
import nuepkgs.system.calc.finance //still testing , you can use it

void main() {
    console.Println("Starting @Test from Main2")
    //println(color.COLORS.Red," Hello worlds " ,color.COLORS.Reset)
    printResult("Kinetic Energy", physics.KineticEnergy(32, 43))
    printResult("Potential Energy", physics.PotentialEnergy(32, 10, 9.81))
    printResult("Force", physics.Force(32, 9.81))
    printResult("Work Done", physics.WorkDone(32, 10, 30))
    printResult("Power", physics.Power(320, 10))
    printResult("Momentum", physics.Momentum(32, 43))
    printResult("Pressure", physics.Pressure(32, 2))
    printResult("Density", physics.Density(32, 0.02))
    printResult("Angular Acceleration", physics.AngularAcceleration(43, 10))
    printResult("Frequency", physics.Frequency(100, 2))
    printResult("Period", physics.Period(2))
    printResult("Centripetal Force", physics.CentripetalForce(32, 43, 2))
    printResult("Torque", physics.Torque(32, 10, 45))
    printResult("Voltage", physics.Voltage(10, 2))
    printResult("Current", physics.Current(10, 2))
    printResult("Resistance", physics.Resistance(10, 2))
    printResult("Escape Velocity", physics.EscapeVelocity(5.97 * 10**24, 6.371 * 10**6))
    printResult("Gravitational Potential Energy", physics.GravitationalPotentialEnergy(5.97 * 10**24, 1.989 * 10**30, 1.5 * 10**11))
    printResult("Electric Potential Energy", physics.ElectricPotentialEnergy(1.6 * 10**-19, 10))
    printResult("Magnetic Force", physics.MagneticForce(1.6 * 10**-19, 43, 0.1))
    printResult("Magnetic Flux", physics.MagneticFlux(0.1, 10, 45))
    printResult("Acceleration Due to Gravity", physics.AccelerationDueToGravity(5.97 * 10**24, 6.371 * 10**6))
    printResult("Buoyant Force", physics.BuoyantForce(1000, 1, 1))
    printResult("Coefficient of Friction", physics.CoefficientOfFriction(10, 20))
    printResult("Heat Transfer", physics.HeatTransfer(2, 4184, 10))
    printResult("Ideal Gas Law Pressure", physics.IdealGasLawPressure(1, 8.314, 273, 0.0224))
    printResult("Ideal Gas Law Volume", physics.IdealGasLawVolume(1, 8.314, 273, 101325))
    printResult("Half-Life", physics.HalfLife(100, 50, 0.1))
    printResult("Rocket Escape Velocity", physics.RocketEscapeVelocity(3000, math.Log(2), 100000, 50000))
    printResult("Velocity from Energy", physics.VelocityFromEnergy(32, 5000))
    printResult("Distance from Velocity", physics.DistanceFromVelocity(0, 43, 9.81))
    printResult("Acceleration from Distance", physics.AccelerationFromDistance(0, 43, 100))
    printResult("Torque from Force", physics.TorqueFromForce(32, 10, 45))
    printResult("Drag Force", physics.DragForce(0.5, 1.225, 43, 2))
    printResult("Moment of Inertia", physics.MomentOfInertia(32, 2))
    printResult("Wave Speed", physics.WaveSpeed(100, 3))
    printResult("Refractive Index", physics.RefractiveIndex(300000000, 200000000))
    printResult("Magnification", physics.Magnification(10, 2, 15, 5))
    printResult("De Broglie Wavelength", physics.DeBroglieWavelength(6.626 * 10**-34, 3.3 * 10**-25))
    printResult("Elastic Potential Energy", physics.ElasticPotentialEnergy(100, 0.1))
    printResult("Hooke's Law Force", physics.HookeLawForce(100, 0.1))
    printResult("Total Internal Energy", physics.TotalInternalEnergy(32, 4184, 10))
    printResult("Young's Modulus", physics.YoungsModulus(100, 0.01))
    printResult("Shear Modulus", physics.ShearModulus(100, 0.01))
    printResult("Bulk Modulus", physics.BulkModulus(100, 0.01))
    printResult("Poisson's Ratio", physics.PoissonsRatio(0.01, 0.02))
    printResult("Compressibility", physics.Compressibility(100))
    printResult("Stress Area", physics.StressArea(100, 10))
    printResult("Stress Force", physics.StressForce(100, 2))
    printResult("Strain Change", physics.StrainChange(10, 0.1))
    printResult("Strain (Young's Modulus)", physics.StrainYoungsModulus(100, 200))
    printResult("Specific Gravity", physics.SpecificGravity(1000, 1000))
    printResult("Thermal Conductivity", physics.ThermalConductivity(1000, 10, 50))
    printResult("Heat Capacity", physics.HeatCapacity(1000, 10))
    printResult("Heat Transfer Rate", physics.HeatTransferRate(100, 10, 50))
    printResult("Impulse", physics.Impulse(100, 2))
    printResult("Gravitational Force", physics.GravitationalForce(5.97 * 10**24, 7.35 * 10**22, 3.844 * 10**8))
    printResult("Rotational Kinetic Energy", physics.RotationalKineticEnergy(32, 10))
    printResult("Rotational Inertia", physics.RotationalInertia(32, 2))
    printResult("Moment of Force", physics.MomentOfForce(32, 10))
    printResult("Wavelength", physics.WaveLength(300, 3))
    printResult("Gravitational Potential Energy", physics.GravitationalPotentialEnergy(32, 10, 9.81))
    printResult("Electrical Power", physics.ElectricalPower(10, 2))
    printResult("Resistance", physics.Resistance(10, 2))
    printResult("Ohm's Law (Voltage)", physics.OhmsLawVoltage(10, 2))
    printResult("Ohm's Law (Current)", physics.OhmsLawCurrent(10, 2))
    printResult("Capacitance", physics.Capacitance(10, 2))
    printResult("Inductance", physics.Inductance(10, 2))
    printResult("Critical Angle", physics.CriticalAngle(1.5, 1))
    printResult("Tension", physics.Tension(9.81, 32))
    printResult("Angular Speed", physics.AngularSpeed(10, 2))
    printResult("Angular Velocity", physics.AngularVelocity(10, 2))
    printResult("Linear Velocity", physics.LinearVelocity(10, 2))
    printResult("Angular Acceleration", physics.AngularAcceleration(43, 10))
    printResult("Centripetal Acceleration", physics.CentripetalAcceleration(10, 2))
    printResult("Kinetic Friction Coefficient", physics.KineticFrictionCoefficient(10, 20))
    printResult("Force Extension", physics.ForceExtension(100, 0.1))
    printResult("Pressure Change", physics.PressureChange(101325, 10, 1000, 9.81))
    printResult("Hydraulic Pressure", physics.HydraulicPressure(100, 2))
    printResult("Hydraulic Force", physics.HydraulicForce(100, 2))
    printResult("Hydraulic Area", physics.HydraulicArea(100, 2))
    printResult("Buoyancy", physics.Buoyancy(1000, 9.81, 1))
    printResult("Flow Rate", physics.FlowRate(10, 2.2))
    printResult("Hydraulic Power", physics.HydraulicPower(10, 100))
    printResult("Leverage", physics.Leverage(10, 2))
    printResult("Gear Ratio", physics.GearRatio(1000, 500))
}

# Example usage of each function with formatted output
void printResult(description, result) {
    console.Println(description," : ",result)
}
   



main()